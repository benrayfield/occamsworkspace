[1.554641940034598e9,"recurrentjavaPaulGraham",{"def" :"java:mutable.recurrentjava.ExamplePaulGraham.main(String[0])","prilist" :["lstmExperiments","r"],"uiTime" :1.5546419393390164e9}]
[1.554642536269024e9,"recurrentjavaPaulGraham",{"def" :"java:mutable.recurrentjava.ExamplePaulGraham.main(new String[0])","prilist" :["lstmExperiments","r"],"uiTime" :1.55464253478717e9}]
[1.5546429000016186e9,"recurrentjavaPaulGraham",{"def" :"javaThread:mutable.recurrentjava.ExamplePaulGraham.main(new String[0])","prilist" :["lstmExperiments","r"],"uiTime" :1.5546428833436792e9}]
[1.5611304600054576e9,"recurrentjavaPaulGraham",{"def" :"javaThread:mutable.recurrentjava.ExamplePaulGraham.main(new String[0])","prilist" :["lstmExperiments","r","delfaultDownStack"],"uiTime" :1.5611304331021996e9}]
[1.563918900003887e9,"recurrentjavaPaulGraham",{"def" :"javaThread:\ntry{\n\tmutable.recurrentjava.ExamplePaulGraham.main(new String[0])\n}catch(Throwable t){\n\tSystem.er\n\tt.printStackTrace(System.err);\n}","prilist" :["lstmExperiments","r","delfaultDownStack"],"uiTime" :1.5639188999114592e9}]
[1.5639206760220296e9,"recurrentjavaPaulGraham",{"def" :"javaThread:\ntry{\n\tSystem.err.println(\"START:\");\n\tmutable.recurrentjava.ExamplePaulGraham.main(new String[0])\n\tSystem.err.println(\"END:\");\n}catch(Throwable t){\n\tSystem.err.println(\"ERRERR:\");\n\t//t.printStackTrace(System.err);\n}","prilist" :["lstmExperiments","r","delfaultDownStack"],"uiTime" :1.5639190712756963e9}]
[1.5640693958444664e9,"recurrentjavaPaulGraham",{"def" :"javaThread:\ntry{\n\tSystem.err.println(\"START:\");\n\tmutable.recurrentjava.ExamplePaulGraham.main(new String[0])\n\tSystem.err.println(\"END:\");\n}catch(Throwable t){\n\tSystem.err.println(\"ERRERR:\");\n\t//t.printStackTrace(System.err);\n}","prilist" :["lstmExperiments","r","delfaultDownStack"],"uiTime" :1.5639207901754441e9}]
[1.5683885631797998e9,"recurrentjavaPaulGraham",{"def" :"javaThread:\ntry{\n\tSystem.err.println(\"START:\");\n\tmutable.recurrentjava.ExamplePaulGraham.main(new String[0])\n\tSystem.err.println(\"END:\");\n}catch(Throwable t){\n\tSystem.err.println(\"ERRERR:\");\n\t//t.printStackTrace(System.err);\n}","prilist" :["lstmExperiments","r","delfaultDownStack"],"uiTime" :1.568388551182901e9}]
