[1.5611317200052297e9,"recurrentjavaSwapstateLstmOn1dViewOfChuasCircuit",{"def" :"Very similar to recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai except input is chosen by ","prilist" :["recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai","lstmExperiments","delfaultDownStack","r"],"uiTime" :1.5611317197756553e9}]
[1.5611325085910144e9,"recurrentjavaSwapstateLstmOn1dViewOfChuasCircuit",{"def" :"TODO\n\nVery similar to recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai except input is chosen by a sim of chuascircuit instead of by mouseY, so the pattern to learn is much simpler, so it has a chance of learning it with a small lstm and less cycles (since I havent opencl optimized recurrentjava yet).","prilist" :["recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai","lstmExperiments","delfaultDownStack","r"],"uiTime" :1.5611317548719258e9}]
[1.5611329120849242e9,"recurrentjavaSwapstateLstmOn1dViewOfChuasCircuit",{"def" :"javaThread:mutable.mouseai.experiments.RecurrentjavaSimpleMouseai.main(new String[]{\"1dViewOfChuasCircuit\"});\n\n/*Very similar to recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai except input is chosen by a sim of chuascircuit instead of by mouseY, so the pattern to learn is much simpler, so it has a chance of learning it with a small lstm and less cycles (since I havent opencl optimized recurrentjava yet).\n*/","prilist" :["recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai","lstmExperiments","delfaultDownStack","r"],"uiTime" :1.5611327453510635e9}]
[1.561481880003758e9,"recurrentjavaSwapstateLstmOn1dViewOfChuasCircuit",{"def" :"javaThread:mutable.mouseai.experiments.RecurrentjavaTimeWindowMouseai.main(new String[]{\"1dViewOfChuasCircuit\"});\n\n/*Very similar to recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai except input is chosen by a sim of chuascircuit instead of by mouseY, so the pattern to learn is much simpler, so it has a chance of learning it with a small lstm and less cycles (since I havent opencl optimized recurrentjava yet).\n*/","prilist" :["recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai","lstmExperiments","delfaultDownStack","r"],"uiTime" :1.5614818736462042e9}]
[1.5639178800307715e9,"recurrentjavaSwapstateLstmOn1dViewOfChuasCircuit",{"def" :"javaThread:mutable.mouseai.experiments.RecurrentjavaTimeWindowMouseai.main(new String[]{\"1dViewOfChuasCircuit\"});\n\n/*Very similar to recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai except input is chosen by a sim of chuascircuit instead of by mouseY, so the pattern to learn is much simpler, so it has a chance of learning it with a small lstm and less cycles (since I havent opencl optimized recurrentjava yet).\n*/","prilist" :["recurrentjavaLaggyBarelyLearningRecurrentjavaSwapstateMouseai","delfaultDownStack","r","recurrentjavaSingleChannelSwapstateLstmOn1dViewOfChuasCircuit"],"uiTime" :1.563917868897288e9}]
